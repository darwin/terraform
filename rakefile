require 'listen' # https://github.com/guard/listen
require 'term/ansicolor'
require 'terminal-notifier'
require 'systemu'

include Term::ANSIColor

def announce(cmd)
  puts "> " + yellow(cmd)
end

def die(msg, status=1)
  puts red("Error[#{status||$?}]: #{msg}")
  exit status||$?
end

def sys(cmd, check_status=true)
  announce(cmd)
  res = system(cmd)
  return res unless check_status
  die "failed!" unless res
end

def compile
  cmd = "./node_modules/.bin/coffee --require ./util/include.coffee --require ./util/license.coffee -c src/terraform.coffee src/editor/editor.coffee baker/cli.coffee baker/baker.coffee baker/server.coffee"
  announce(cmd)
  status = systemu cmd, 1=>out=$stdout, 2=>err=''
  $stderr.print err
  return if status.exitstatus == 0
  puts "\x07" # bell!
  # TerminalNotifier.notify(err, { :title => "Terraform", :group => Process.pid } )
end

############################################################

desc "init"
task :init do
  sys("bundle install")
  sys("npm install")
end

desc "dev"
task :dev do
  puts "listening to changes under src folder..."
  compile()
  Listen.to('src', 'baker', :filter => /\.coffee$/) do |modified, added, removed|
    compile()
  end
end

desc "sample demo patching, for testing purposes until we get MutationObservers support in PhantomJS"
task :patch do
  sys("./bin/terraform-patch --payload test/sample-payload.json --output demo/index-baked.html demo/index.html")
  puts("try: diff demo/index.html demo/index-baked.html")

end

task :default => :dev